--SELECT * 
--FROM dept;

--7.3 User-defined exceptions
DECLARE
    v_name  VARCHAR2(20) := 'Accounting';
    v_deptno NUMBER :=27;

    -- declaring a user-defined exception
    e_invalid_department EXCEPTION;
BEGIN
    UPDATE dept
    SET dname = v_name
    WHERE deptno = v_deptno;
    --raising exception explicitly
    IF SQL%NOTFOUND THEN 
        RAISE e_invalid_department;
    END IF;
    
    --trap user-defined exception
    EXCEPTION WHEN e_invalid_department THEN
        DBMS_OUTPUT.PUT_LINE('This deptno does not exist.');


END;


--SELECT *
--FROM emp;
-- RAISE_APPLICATION_ERROR in the Executable section
DECLARE
    v_mgr PLS_INTEGER :=123;
BEGIN
    DELETE FROM emp
    WHERE mgr = v_mgr;
    IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20202, 'This is not a valid mgr id.');
    END IF;
END;


-- RAISE_APPLICATION_ERROR in the Exception section
DECLARE
    v_mgr PLS_INTEGER := 123;
    v_emp_id emp.empno%TYPE;
BEGIN
    SELECT empno INTO v_emp_id
    FROM emp
    WHERE mgr = v_mgr;
    DBMS_OUTPUT.PUT_LINE('Employee #' || v_emp_id || ' works for manager #' || v_mgr || '.'  );

    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20201, 'This manager has no employees. ');
    WHEN TOO_MANY_ROWS THEN
        RAISE_APPLICATION_ERROR(-20202, 'To many employees were found. ');
END;

--use RAISE_APPLICATION_ERROR with a user-defined exception

DECLARE
    e_name EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_name, -20999);

    v_last_name emp.ename%TYPE := 'Sily Name';
BEGIN
    DELETE FROM emp
    WHERE ename = v_last_name;
    IF SQL%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20999, 'Invalid last name.');
    ELSE
        DBMS_OUTPUT.PUT_LINE(v_last_name || 'deleted');
    END IF;

    EXCEPTION
        WHEN e_name THEN
        DBMS_OUTPUT.PUT_LINE('Valid last names are: ');
        FOR c1 IN (SELECT DISTINCT ename FROM emp)
        LOOP
            DBMS_OUTPUT.PUT_LINE(c1.ename);
        END LOOP;
        WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error deleting from emp.');

END;


--7_3_Practice
 DECLARE
    CURSOR cur_emp_sal(v_dept_id number) IS
    SELECT empno, ename, sal 
    FROM excep_emp
    WHERE deptno = v_dept_id
    FOR UPDATE OF sal;

    --record
    emp_sal_rec cur_emp_sal%ROWTYPE;

    e_no_rows_updated EXCEPTION;

 BEGIN
    OPEN cur_emp_sal(40); --20, 30, 40 produces an error
    LOOP
        FETCH cur_emp_sal INTO emp_sal_rec;
        EXIT WHEN cur_emp_sal%NOTFOUND;
        --update salaries
        UPDATE excep_emp
        SET sal = sal + 10000
        WHERE CURRENT OF cur_emp_sal;
        IF SQL%ROWCOUNT = 0 THEN
            RAISE e_no_rows_updated;
        ELSE
            DBMS_OUTPUT.PUT_LINE(' Salaries updated for ' || emp_sal_rec.ename );
        END IF;
    END LOOP;
    CLOSE cur_emp_sal;

     --trap user-defined exception
        EXCEPTION 
        WHEN e_no_rows_updated THEN
            DBMS_OUTPUT.PUT_LINE('This deptno does not exist.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error! Salaries were not updated!');
 END;